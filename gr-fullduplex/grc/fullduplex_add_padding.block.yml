id: fullduplex_add_padding
label: Add Padding
category: '[fullduplex]'

templates:
  imports: import fullduplex
  make: fullduplex.add_padding(${debug}, ${pad_front}, ${pad_tail})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: debug
  label: Debug
  dtype: bool
  default: False
  options: [True, False]
  option_labels: ["Enable", "Disable"]
- id: pad_front
  label: Front Padding
  dtype: int
  default: 0
- id: pad_tail
  label: Tail Padding
  dtype: int
  default: 0

asserts:
- ${pad_front >= 0}
- ${pad_tail >= 0}

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: complex

outputs:
- label: out
  domain: stream
  dtype: complex

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
